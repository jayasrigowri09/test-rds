---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template for creating an Amazon RDS DB instance:
  Sample template showing how to create a DB instance with Enhanced Monitoring enabled.
  **WARNING** This template creates an RDS DB instance. You will be billed for the
  AWS resources used if you create a stack from this template.'
Parameters:


  AvailabilityZone:
    Type: String
    Description: select availability zone
    Default: us-west-1a

  AmiId:
    Type: String
    Description: The ID of the Instance
    Default: ami-00569e54da628d17c

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName

  DBInstanceIdentifier:
    Type: String
    Default: "webapp-db"

  DBUsername:
    Type: String
    NoEcho: "true"
    Description: Username for Mysql database access
    Default: "Mysqldb"
  DBPassword:
    Type: String
    Description: Db password must alphanumeric
Resources:
  RDSDEMOVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      Tags:
      - Key: Nmae
        Value: RDSDEMOVPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-south-1a
      VpcId:
        Ref: RDSDEMOVPC
      CidrBlock: 192.168.1.0/24
      Tags:
      - Key: Name
        Value: Private-Subnet1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-south-1b
      VpcId:
        Ref: RDSDEMOVPC
      CidrBlock: 192.168.2.0/24
      Tags:
      - Key: Name
        Value: Private-Subnet2
  RdsDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet for rds
      SubnetIds:
      - Ref: PrivateSubnet1
      - Ref: PrivateSubnet2
      Tags:
      - Key: Name
        Value: Rds-DBSubnetGroup
  RdsDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '5'
      DBInstanceIdentifier: MyRdsDemo
      DBName: TestRds
      VPCSecurityGroups:
      - Ref: RdsSecurityGroup
      DBSubnetGroupName:
        Ref: RdsDBSubnetGroup
      DBInstanceClass: db.t2.small
      Engine: MYSQL
      EngineVersion: 8.0.28
      MasterUsername: masterrds
      MasterUserPassword:
        Ref: DBPassword
      MultiAZ: 'false'
      Port: '3306'
      PubliclyAccessible: 'false'
      Tags:
      - Key: Name
        Value: MYRDSDEMO
  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Rds connection
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      VpcId:
        Ref: RDSDEMOVPC
      Tags:
      - Key: Name
        Value: RdsSecurityGroup


  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Test-Igw

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref RDSDEMOVPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RDSDEMOVPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 192.168.0.0/24
      
      Tags:
        - Key: Name
          Value: Public-Subnet-Test


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RDSDEMOVPC
      Tags:
        - Key: Name
          Value: Public-RT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet



WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      ImageId: !Ref AmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
      SubnetId: !Ref PublicSubnet

WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HttPS and SSH and database"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref RDSDEMOVPC

