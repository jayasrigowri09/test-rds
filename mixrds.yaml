



AWSTemplateFormatVersion: '2010-09-09'
Description: Create Ec2 Machine and Rds

Parameters:
  AvailabilityZone:
    Type: String
    Description: select availability zone
    Default: us-west-1a

  AmiId:
    Type: String
    Description: The ID of the Instance
    Default: ami-00569e54da628d17c

  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName

  DBInstanceIdentifier:
    Type: String
    Default: "webapp-db"

  DBUsername:
    Type: String
    NoEcho: "true"
    Description: Username for Mysql database access
    Default: "Mysqldb"
  DBPassword:
    NoEcho: "true"
    Description: Password Mysql database access
    Type: String
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: Must contain only alphanumeric characters.

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 192.168.0.0/16
      Tags:
        - Key: Name
          Value: RDSDEMOVPC

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-west-1a
      VpcId:
        Ref: VPC
      CidrBlock: 192.168.1.0/24
      Tags:
        - Key: Name
          Value: Private-Subnet1

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-west-1c
      VpcId:
        Ref: VPC
      CidrBlock: 192.168.2.0/24
      Tags:
        - Key: Name
          Value: Private-Subnet2


  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Test-Igw

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 192.168.0.0/24
      
      Tags:
        - Key: Name
          Value: Public-Subnet-Test


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public-RT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  WebAppDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet for rds
      SubnetIds:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
      Tags:
        - Key: Name
          Value: Rds-DBSubnetGroup

  WebAppInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref AvailabilityZone
      ImageId: !Ref AmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WebAppSecurityGroup
      SubnetId: !Ref PublicSubnet

          
  WebAppDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      VpcSecurityGroups:
        - !GetAtt DBEC2SecurityGroup.GroupId
      DBSubnetGroupName:
        Ref: WebAppDBSubnetGroup
      AllocatedStorage: "5"
      DBInstanceClass: db.t2.small
      Engine: MYSQL
      EngineVersion: 8.0.28
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      Tags:
        - Key: Name
          Value: MyDBInstance

  DBEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow Database inbound traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          #CidrIp: 0.0.0.0/0
          SourceSecurityGroupName:
            Ref: WebAppSecurityGroup
      Tags:
        - Key: Name
          Value: DBEC2-SG
      VpcId: !Ref VPC
      
    
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow HttPS and SSH and database"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
       

 


